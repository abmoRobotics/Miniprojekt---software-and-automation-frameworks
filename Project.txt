
TONInst(PT:=T#5S);
TONInst2(PT:=T#5S);
TONInst3(PT:=T#5S);
TONInst4();
RFID();

CASE state OF
	
0: // INIT
IO.xQA1_RIGHT := TRUE;
IO.xQA1_LEFT := FALSE;
IO.xMB20 := FALSE;
RFID.ClearError();
state := 1;

1:
IF RFID.xReady THEN
	RFID.Connect(usiNodeId := 32, usiNetworkId :=0 , usiChannel :=1);
	state := 2;
END_IF

2: 
IF RFID.xReady THEN
	state := 3;
END_IF


3: // wait for carrier
IF IO.xBG21 = TRUE THEN
	IO.xMB20 := TRUE;
	IO.xQA1_RIGHT := FALSE;
	TONInst3.IN := TRUE;
	state := 4;
END_IF

4: 
RFID.ReadTag(uiStartAddress := 0, uiDataLength := SIZEOF(rfidData), ADR(rfidData));
state :=5;

5: // wait for rfid read
IF RFID.xReady THEN
	IF rfidData.uiCarrierID <= 8 THEN
		state:= 100;
	ELSE
		state := 200;
	END_IF
END_IF

100:
IO.xMB20 := TRUE;
state := 300;

200:
TONinst4(IN:=TRUE, pt:=T#2S);
state := 210;

210:
IF TONInst4.Q THEN
	IO.xMB20 := TRUE;
	state := 300;
END_IF


300:

	TONInst3.IN := FALSE;
	IO.xQA1_SLOW := TRUE;
	IO.xQA1_RIGHT := TRUE;
	state := 6;


6: // Wait for carrier to pass
IF IO.xBG21 = FALSE THEN
	//IO.xMB20 := FALSE;
	state:=7;
END_IF

7:

TONInst.IN := TRUE;

IF TONInst.Q = TRUE THEN
	state := 8;
	
END_IF

8:
TONInst.IN := FALSE;

IO.xQA1_RIGHT := FALSE;
IO.xQA1_LEFT := TRUE;
state := 9;

9:
IF IO.xBG24 = TRUE THEN
	state := 10;
END_IF

10:	
IO.xQA1_SLOW := FALSE;
IO.xMB20 := FALSE;
state := 11;

11: 

TONInst2.IN := TRUE;

IF TONInst2.Q = TRUE THEN
	state := 0;
	TONInst2.IN := FALSE;
	
END_IF


END_CASE
